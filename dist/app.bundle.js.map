{"version":3,"file":"app.bundle.js","mappings":"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","sources":["webpack://to-do-list/./src/assets/events.js","webpack://to-do-list/./src/assets/projects-ui.js","webpack://to-do-list/./src/index.js","webpack://to-do-list/./src/assets/todos-ui.js","webpack://to-do-list/./src/assets/dialog-ui.js","webpack://to-do-list/./src/assets/projects.js","webpack://to-do-list/./src/assets/todos.js"],"sourcesContent":["let events = {};\n\n// create a new function for a new or existing event name (doesn’t check duplicates) \nfunction on(eventName, fn) {\n  events[eventName] = events[eventName] || [];\n  events[eventName].push(fn);\n};\n\n// remove an event name’s associated function (one instance in this e.g.)\nfunction off(eventName, fn) {\n  if (events[eventName]) {\n    for (var i = 0; i < events[eventName].length; i++) {\n      if (events[eventName][i] === fn) {\n        events[eventName].splice(i, 1);\n        break;\n      }\n    }\n  }\n}\n\n// emit a piece of data to all functions on one event name\nfunction emit(eventName, data) {\n  if (events[eventName]) {\n    events[eventName].forEach((fn) => {\n      fn(data);\n    });\n  }\n}\n\nexport { on, off, emit };","// import modules\nimport * as Events from './events.js';\n\nlet ProjectsUI = (function() {\n  // cache DOM\n  const projList = document.querySelector('.project-list');\n\n  // event binding\n  projList.addEventListener('click', projectAction);\n\n  // methods\n  function renderProjects(application) {\n    removeElements(projList);\n    for (let project of application.projects) {\n      const index = application.projects.indexOf(project);\n      projList.appendChild(createProject(project, index));\n    }\n    projList.appendChild(createAddProject());\n  }\n\n  function removeElements(parent) {\n    let childElements = Array.from(parent.children)\n    for (let child of childElements) {\n      parent.removeChild(child);\n    }\n  }\n\n  function createProject(project, index) {\n    const newProject = document.createElement('div');\n    newProject.setAttribute('data-index', index);\n\n    const projectTitle = project.title ? project.title : 'Untitled Project';\n    const openTasks = getOpenTasks(project);\n\n    newProject.innerHTML = \n    `\n    <div class=\"project-meta\">\n      <p>${projectTitle}</p>\n      <p class=\"task-meta\">open tasks: ${openTasks}</p>\n    </div>\n    <button type=\"button\" class=\"delete-button\"></button>\n    `\n    ;\n\n    return newProject;\n  }\n\n  function getOpenTasks(project) {\n    let i = 0;\n    for (let item of project.items) {\n      if (item.completed === false) {\n        i++;\n      }\n    }\n\n    return i;\n  }\n\n  function createAddProject() {\n    const newAddProject = document.createElement('div');\n    newAddProject.classList.add('project-add');\n    newAddProject.innerHTML = \n      `\n      <p>Add A Project!</p>\n      <div class=\"add-button\"></div>\n      `\n    ;\n\n    return newAddProject;\n  }\n\n  function projectAction(e) {\n    if (e.target.closest('.delete-button')) {\n      deleteProject(e.target.closest('div[data-index]').getAttribute('data-index'));\n    } else if (e.target.closest('div[data-index]')) {\n      selectProject(e.target.closest('div[data-index]').getAttribute('data-index'));\n    } else if (e.target.closest('.project-add')) {\n      addProject();\n    }\n  }\n\n  function deleteProject(index) {\n    Events.emit('deleteProject', index);\n  }\n\n  function selectProject(index) {\n    Events.emit('selectProject', index);\n  }\n\n  function addProject() {\n    Events.emit('addProject', null);\n  }\n\n  return { renderProjects };\n\n})();\n\n// export\nexport { ProjectsUI };","// import css\nimport './static/reset.css';\nimport './static/style.css';\n\n// import modules\nimport * as Events from './assets/events.js';\nimport { Project } from './assets/projects.js';\nimport { ProjectsUI } from './assets/projects-ui.js';\nimport { TodosUI } from './assets/todos-ui.js';\nimport { dialogUI } from './assets/dialog-ui.js';\n\n// user application 'class'\nconst Application = function() {\n  let projects = [];\n  let currentProject = undefined;\n\n  function addProject() {\n    this.projects.push(Project());\n  }\n\n  function removeProject(index) {\n    this.projects.splice(index, 1);\n  }\n\n  return { projects, addProject, removeProject };\n};\n\n// custom event handling - master app\nEvents.on('addProject', addProject);\nEvents.on('deleteProject', deleteProject);\nEvents.on('selectProject', selectProject);\nEvents.on('renderProjects', renderProjects);\nEvents.on('changeProjName', changeProjName);\nEvents.on('changeProjDesc', changeProjDesc);\n\nEvents.on('renderContent', renderContent);\n\n// custom event handling - to-dos\nEvents.on('deleteItem', deleteItem);\nEvents.on('toggleItemStatus', toggleItemStatus);\nEvents.on('openModal', openModal);\nEvents.on('submitModal', submitModal);\n\n// master app methods\nfunction addProject() {\n  application.addProject();\n  application.currentProject = application.projects[application.projects.length - 1];\n  renderProjects();\n  renderContent();\n}\n\nfunction deleteProject(index) {\n  application.removeProject(index);\n  application.currentProject = application.projects[application.projects.length - 1];\n  renderProjects();\n  renderContent();\n}\n\nfunction selectProject(index) {\n  application.currentProject = application.projects[index];\n  renderContent();\n}\n\nfunction renderProjects() {\n  ProjectsUI.renderProjects(application);\n}\n\nfunction changeProjName(string) {\n  application.currentProject.title = string;\n  renderProjects();\n}\n\nfunction changeProjDesc(string) {\n  application.currentProject.description = string;\n}\n\nfunction renderContent() {\n  TodosUI.renderContent(application.currentProject);\n}\n\n// to-do methods\nfunction deleteItem(index) {\n  application.currentProject.removeItem(index);\n  renderProjects();\n  renderContent();\n}\n\nfunction toggleItemStatus(index) {\n  application.currentProject.items[index].toggleCompleted();\n  renderProjects();\n  renderContent();\n}\n\nfunction openModal(index) {\n  application.currentProject.currentItem = application.currentProject.items[index];\n  dialogUI.createDialog(application.currentProject.currentItem);\n}\n\nfunction submitModal(itemObj) {\n  if (application.currentProject.currentItem) {\n    application.currentProject.currentItem.edit(itemObj);\n  } else {\n    application.currentProject.addItem(itemObj);\n  }\n  renderProjects();\n  renderContent();\n}\n\n// INIT PROGRAM //\nlet application;\nfunction initializeApp() {\n  application = Application()\n  application.addProject();\n  application.currentProject = application.projects[0];\n  renderProjects();\n  renderContent();\n}\n\ninitializeApp();\n\n\n\n// TEST VALUES //\n\n// let testObj1 = {\n//   title: \"Groceries\",\n//   description: \"This is for groceries\",\n//   dueDate: '2023-11-25',\n//   priority: 'High',\n//   notes: \"There will be more things to get at corner store\",\n// }\n\n// let testObj2 = {\n//   title: \"Shopping\",\n//   description: \"This is for shopping\",\n//   dueDate: '2023-11-24',\n//   priority: 'Low',\n//   notes: \"Get gas on way back!\",\n// }\n\n// let testObj3 = {\n//   title: \"New Video\",\n//   description: \"Make a new vid\",\n//   dueDate: '2023-11-29',\n//   priority: 'High',\n//   notes: \"Use Adobe\",\n// }\n\n// let testProj1 = {\n//   title: \"Day-To-Day\",\n//   description: \"day to day activities\"\n// }\n\n// let testProj2 = {\n//   title: \"Week-to-Week\",\n//   description: \"week to week activities\"\n// }\n\n\n// init program - later get this from local storage!\n// let application = Application();\n// application.addProject();\n// application.addProject();\n\n// application.projects[0].edit(testProj1);\n// application.projects[1].edit(testProj2);\n\n// application.projects[0].addItem(testObj1);\n// application.projects[0].addItem(testObj2);\n// application.projects[1].addItem(testObj3);\n\n\n// INIT TESTING\n// Events.emit('renderProjects', application);\n// Events.emit('renderContent', application.currentProject);","// import modules\nimport * as Events from './events.js';\n\nlet TodosUI = (function() {\n  // cache dom\n  const contentContainer = document.querySelector('.content');\n\n  const projName = document.querySelector('.project-name');\n  const projDescription = document.querySelector('.project-description');\n\n  const todoList = document.querySelector('.todo-items');\n  const addTodo = document.querySelector('.add-todo');\n\n  // bind event listeners\n  addTodo.addEventListener('click', checkDialogMode);\n  todoList.addEventListener('click', todoAction);\n  projName.addEventListener('input', changeProjName);\n  projDescription.addEventListener('input', changeProjDesc);\n\n  // methods\n  function renderContent(project) {\n    if (!project) {\n      contentContainer.style.visibility = 'hidden';\n    } else {\n      contentContainer.style.visibility = 'visible';\n      renderMeta(project);\n      renderItems(project);\n    }\n  }\n\n  function renderMeta(project) {\n    projName.value = project.title ? project.title : '';\n    projDescription.value = project.description ? project.description : '';\n  }\n\n  function renderItems(project) {\n    removeElements(todoList);\n    for (let item of project.items) {\n      const index = project.items.indexOf(item);\n      todoList.appendChild(createItem(item, index));\n    }\n  }\n\n  function removeElements(parent) {\n    let childElements = Array.from(parent.children)\n    for (let child of childElements) {\n      parent.removeChild(child);\n    }\n  }\n\n  function createItem(item, index) {\n    const newItem = document.createElement('div');\n    newItem.classList.add('todo');\n    newItem.setAttribute('data-index', index);\n\n    let checkedStatus = '';\n    if (item.completed) {\n      newItem.classList.add('completed');\n      checkedStatus = 'checked';\n    }\n\n    let priorityValue = item.priority.toLowerCase();\n\n    newItem.innerHTML = \n    `\n    <input type=\"checkbox\" class=\"checkbox\" ${checkedStatus}>\n    <h3>${item.title}</h3>\n    <p class=\"todo-description\">${item.description}</p>\n    <p>${item.dueDate}</p>\n    <div class=\"priority ${priorityValue}\">${item.priority}</div>\n    <div class=\"delete-todo\"></div>\n    `\n    ;\n\n    return newItem;\n  }\n\n  function todoAction(e) {\n    if (e.target.closest('.delete-todo')) {\n      deleteItem(e.target.closest('div[data-index]').getAttribute('data-index'));\n    } else if (e.target.closest('.checkbox')) {\n      toggleItemStatus(e.target.closest('div[data-index]').getAttribute('data-index'));\n    } else if (e.target.closest('.todo')) {\n      checkDialogMode(e.target.closest('div[data-index]').getAttribute('data-index'));\n    }\n  }\n\n  function deleteItem(index) {\n    Events.emit('deleteItem', index);\n  }\n\n  function toggleItemStatus(index) {\n    Events.emit('toggleItemStatus', index);\n  }\n\n  function checkDialogMode(e) {\n    let index = typeof(e) === 'string' ? e : undefined;\n    Events.emit('openModal', index);\n  }\n\n  function changeProjName() {\n    let string = projName.value;\n    Events.emit('changeProjName', string);\n  }\n\n  function changeProjDesc() {\n    let string = projDescription.value;\n    Events.emit('changeProjDesc', string);\n  }\n\n  return { renderContent };\n})();\n\n// export\nexport { TodosUI };","// import modules\nimport * as Events from './events.js';\n\nlet dialogUI = (function() {\n  // cache dom\n  const outerDialog = document.querySelector('dialog');\n  const dialogForm = document.querySelector('form');\n  const closeModal = document.querySelector('.close-modal');\n\n  const dialogHeader = document.querySelector('.dialog-header');\n  const submitButton = document.querySelector('.submit-todo');\n\n  const titleInput = document.querySelector('#title');\n  const descriptionInput = document.querySelector('#description');\n  const dueInput = document.querySelector('#due-date');\n  const priorityInput = document.querySelector('#priority');\n  const notesInput = document.querySelector('#notes');\n\n  // bind event listeners\n  outerDialog.addEventListener('click', checkModalLocation);\n  dialogForm.addEventListener('submit', submitDialog);\n  closeModal.addEventListener('click', closeDialog);\n\n  // methods\n  function createDialog(item) {\n    if (item) {\n      dialogHeader.innerText = item.title;\n      submitButton.innerText = 'Save';\n\n      titleInput.value = item.title;\n      descriptionInput.value = item.description;\n      dueInput.value = item.dueDate;\n      priorityInput.value = item.priority;\n      notesInput.value = item.notes;\n    } else {\n      dialogHeader.innerText = 'Add New To-Do';\n      submitButton.innerText = 'Add To-Do';\n    }\n    outerDialog.showModal();\n  }\n\n  function checkModalLocation(e) {\n    const modalDimensions = outerDialog.getBoundingClientRect()\n    if (\n      e.clientX < modalDimensions.left ||\n      e.clientX > modalDimensions.right ||\n      e.clientY < modalDimensions.top ||\n      e.clientY > modalDimensions.bottom\n    ) {\n      closeDialog();\n    }\n  }\n\n  function submitDialog() {\n    let itemObj = {\n      title: titleInput.value.trim(),\n      description: descriptionInput.value.trim(),\n      dueDate: dueInput.value.trim(),\n      priority: priorityInput.value.trim(),\n      notes: notesInput.value.trim(),\n    }\n\n    Events.emit('submitModal', itemObj);\n    closeDialog();\n  }\n\n  function closeDialog() {\n    titleInput.value = '';\n    descriptionInput.value = '';\n    dueInput.value = '';\n    notesInput.value = '';\n    priorityInput.value = 'Medium';\n\n    outerDialog.close();\n  }\n\n  return { createDialog };\n})();\n\n// export\nexport { dialogUI };","// import modules\nimport { Todo } from './todos.js';\n\n// Project 'class'\nconst Project = function() {\n  // AUTO PROPERTIES\n  let title;\n  let description;\n  let dateCreated = _getDate();\n\n  // ITERABLE - lists all to-dos for the project instance\n  let items = [];\n\n  // STATE\n  let currentItem = undefined;\n\n  function _getDate() {\n    return new Date();\n  }\n\n  function edit(editObj) {\n    this.title = editObj.title;\n    this.description = editObj.description;\n  }\n\n  function addItem(newObj) {\n    this.items.push(Todo(newObj));\n  }\n\n  function removeItem(index) {\n    this.items.splice(index, 1);\n  }\n\n  function sort(property, descending = true) {\n    if (descending) {\n      this.items = this.items.sort((a, b) => (a[property] > b[property]) ? -1 : 1);\n    } else {\n      this.items = this.items.sort((a, b) => (a[property] > b[property]) ? 1 : -1);\n    }\n  }\n\n  return {\n    // properties\n    title,\n    description,\n    dateCreated,\n\n    // iterable property\n    items,\n\n    // public methods\n    edit,\n    addItem,\n    removeItem,\n    sort\n  }\n};\n\nexport { Project };","// To-do 'class'\nconst Todo = function(inputObj) {\n  // USER-GENERATED PROPERTIES\n  let title = inputObj.title;\n  let description = inputObj.description;\n  let dueDate = inputObj.dueDate;\n  let priority = inputObj.priority;\n  let notes = inputObj.notes;\n\n  // AUTO PROPERTIES\n  let dateCreated = _getDate();\n  let completed = false;\n\n  function _getDate() {\n    return new Date();\n  }\n\n  function edit(editObj) {\n    this.title = editObj.title;\n    this.description = editObj.description;\n    this.dueDate = editObj.dueDate;\n    this.priority = editObj.priority;\n    this.notes = editObj.notes;\n  }\n\n  function toggleCompleted() {\n    this.completed = this.completed ? false : true;\n  }\n\n  return { \n    // properties\n    title, \n    description, \n    dueDate, \n    priority, \n    notes, \n    dateCreated, \n    completed, \n\n    // public methods\n    edit, \n    toggleCompleted,\n  };\n};\n\nexport { Todo };"],"names":["events","on","eventName","fn","push","emit","data","forEach","application","ProjectsUI","projList","document","querySelector","createProject","project","index","newProject","createElement","setAttribute","projectTitle","title","openTasks","i","item","items","completed","getOpenTasks","innerHTML","addEventListener","e","target","closest","getAttribute","renderProjects","parent","childElements","Array","from","children","child","removeChild","removeElements","projects","indexOf","appendChild","newAddProject","classList","add","createAddProject","TodosUI","contentContainer","projName","projDescription","todoList","createItem","newItem","checkedStatus","priorityValue","priority","toLowerCase","description","dueDate","checkDialogMode","undefined","value","renderContent","style","visibility","renderMeta","renderItems","dialogUI","outerDialog","dialogForm","closeModal","dialogHeader","submitButton","titleInput","descriptionInput","dueInput","priorityInput","notesInput","closeDialog","close","modalDimensions","getBoundingClientRect","clientX","left","right","clientY","top","bottom","trim","notes","createDialog","innerText","showModal","currentProject","addProject","length","removeProject","string","removeItem","toggleCompleted","currentItem","itemObj","edit","addItem","this","dateCreated","Date","editObj","newObj","inputObj","splice","sort","property","descending","a","b"],"sourceRoot":""}